{% if ["xrandr", "i3-msg", "jq"] is installed -%}
# Function for turning on/off dual monitor setup with i3.
dualmonitor() {
	local displays
	local d1
	local d2

	displays=($(xrandr -q | grep ' connected' | cut -d\  -f1))

	# Decide on the layout based on keywords.
	case "$2" in
		swap)
			d1=$displays[2]
			d2=$displays[1]
		;;
		*)
			d1=$displays[1]
			d2=$displays[2]
		;;
	esac


	# We use anonymous functions for cases.
	case "$1" in
		on) function {
			local jqq
			local wlist
			local wmv
			local wvisible

			# Check for displays.
			if [ $#displays -lt 2 ]; then
				>&2 echo "Not enough displays..."
				return 1
			fi

			# Setup displays.
			printf 'Primary display: %s, Secondary display: %s\n' "$d1" "$d2"
			xrandr --output "$d1" --auto --output "$d2" --auto --right-of "$d1"
			xrandr --output "$d1" --primary

			# Get visible workspace from primary display.
			jqq="$(printf '.[] | select(.output == "%s" and .visible == true).num' "$d1")"
			wvisible="$(i3-msg -t get_workspaces | jq -r "$jqq")"

			# Move some workspaces to new display.
			jqq="$(printf '.[] | select(.output == "%s" and .num > 2).num' "$d1")"
			wlist=($(i3-msg -t get_workspaces | jq -r "$jqq"))
			for w in $wlist; do
				wmv="$(printf 'workspace %s; move workspace to %s' "$w" "$d2")"
				i3-msg $wmv
			done

			# Move to the primary display workspace.
			i3-msg workspace "$wvisible"
		};;
		off) function {
			local primaryd
			local otherd
			local wlist
			local jqq
			local wmv
			local wvisible
			local wfocused

			# Get primary display from I3. Use jq raw output to exclude quotes.
			# Fallback to focused display if no display assigned as primary.
			primaryd=$(i3-msg -t get_outputs | jq -r '.[] | select(.primary == true).name')
			if [ "$primaryd" = "" ]; then
		        wfocused=$(i3-msg -t get_workspaces | jq -r '.[] | select(.focused == true).name')
				jqq="$(printf '.[] | select(.name == "%s").output' "$wfocused")"
				primaryd=$(i3-msg -t get_workspaces | jq -r "$jqq")
			fi

			# Still no primary display. Abort.
			if [ "$primaryd" = "" ]; then
				>&2 echo "Could not identify primary display..."
				return 1
			fi

			# Get visible workspace from primary display.
			jqq="$(printf '.[] | select(.output == "%s" and .visible == true).num' "$primaryd")"
			wvisible="$(i3-msg -t get_workspaces | jq -r "$jqq")"

			# Get list of workspaces in non-primary displays.
			jqq="$(printf '.[] | select(.output != "%s").num' "$primaryd")"
			wlist=($(i3-msg -t get_workspaces | jq -r "$jqq"))

			# Gather workspaces to primary display.
			for w in $wlist; do
				wmv="$(printf 'workspace %s; move workspace to %s' "$w" "$primaryd")"
				i3-msg $wmv
			done

			# Move to the primary display workspace.
			i3-msg workspace "$wvisible"

			# Turn off all displays except from the primary.
			jqq="$(printf '.[] | select(.name != "%s").name' "$primaryd")"
			otherd=($(i3-msg -t get_outputs | jq -r "$jqq"))
			for d in $otherd; do
				xrandr --output "$d" --off
			done
		};;
		*)
		;;
	esac
}
{%- endif %}

# vim:ft=sh

