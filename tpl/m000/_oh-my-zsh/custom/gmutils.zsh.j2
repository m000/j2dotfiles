# quick batch image resize with graphicsmagick
{% if ["gm",] is installed %}
{# conflicts with graphicsmagick #}
unalias gm
gmresize() {
	local q=${q:-"85"}
	local s=${s:-"1200"}
	local sm=$(echo "$s" | tr -dc ^)
	s=$(echo "$s" | sed -E 's/[^0-9]*([0-9]+).*/\1/')


	for f in "$@"; do
		# extract extension for file
		fbnm=$(basename "$f")
		fext="${fbnm##*.}"
		if [ "$fext" = "$fbnm" ]; then
			echo "Skipping '$f' (no extension)." 1>&2
			continue
		fi

		# resize and save to temp file, then overwrite original
		mv -f =(gm convert -resize ${s}x${s}${sm} -quality "$q" "$f" ${fext}:-) "$f"

		# check for failure and overwrite original
		if [ "$?" != "0" ]; then
			echo "Conversion failure for '$f' (conversion failure)." 1>&2
			continue
		fi

		gm identify "$f"
	done
}

gmboomerang() {
	local boomtemp=$(mktemp -t boomtmpXXX.gif)
	local lastframe=$(gm identify "$1" | tail -1 | awk -F'[\\[\\]]' '{ print $2 }')
	local forward_range="0-$lastframe"
	local reverse_range="$(( $lastframe -1 ))-1"
	local frame_delay=$(( ${3:-5} ))

	gm convert "$1" -coalesce "$boomtemp"
	gm convert -delay "$frame_delay" -loop 0 "$boomtemp"'['"$forward_range"']' "$boomtemp"'['"$reverse_range"']' "$2"
	rm -f "$boomtemp"
	{% if ["gifsicle",] is installed %}
	echo gifsicle --batch -O3 "$2"
	{% else %}
	echo "Warning: gifsicle not found, output is not optimized." >&2
	{% endif -%}
}
{% else %}
# not available in this setup
{% endif %}

# vim:ft=sh

