# calculate a collective hash for all the small files (<20M) in a directory
function smallfilehash() {
    find "$1" -type f -size -20M -not -iname '.*' -exec md5sum \{\} \; |
    awk '{print $1}' | sort -n | md5sum | awk '{print $1}'
}

# convenience wrapper for finding files by extension
extfind() {
	local namecase="i"
	local nameexp=""
	local dir="."

	if [ -d "$1" ]; then
		dir="$1"
		shift
	fi

	# construct an array of -name/-iname arguments
	nameexp=("-${namecase}name *.""$^@")

	# join the array with "-o" and split on spaces
	find "$dir" ${(j: -o :s: :)nameexp}

{#
Reference:
	http://unix.stackexchange.com/a/258928
	http://stackoverflow.com/a/10796467
	man zshexpn
#}
}

# create backup of directory
mkbak() {
{% if "gtar" is installed %}
	local TAR=gtar
{% else %}
	local TAR=tar
{% endif %}
	local u
	local Y m d j H M
	date '+%Y %m %d %j %H %M' | read Y m d j H M

	if [ "$#" -eq 1 ] && [ -d "$1" ]; then
		# make filename from the single argument
		f=$(echo "$1" | tr A-Z\  a-z-)
	elif [ "$#" -gt 1 ] && [ ! -d "$1" ]; then
		# treat first argument as filename
		f="$1"
		shift
	else
		cat >&2 <<-EOF
		Invalid arguments. Usage:
		    $0 <dir>
		    $0 <basename> <dir1> [<dir2> ...]
		EOF
	fi

	# make unique suffix
	u=$(printf "%d%02d%02d_%04d" "$Y" "$m" "$d" "$(( $H*60 + $M ))")
	
	$TAR -zcvf "$f"_$u.tar.gz "$@"
}

# vim:ft=sh
